2023-05-19 18:49:54,768:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-19 18:49:54,768:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-19 18:49:54,769:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-19 18:49:54,769:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-19 18:49:55,325:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-05-19 18:49:55,927:INFO:PyCaret ClassificationExperiment
2023-05-19 18:49:55,927:INFO:Logging name: clf-default-name
2023-05-19 18:49:55,927:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-05-19 18:49:55,927:INFO:version 3.0.2
2023-05-19 18:49:55,927:INFO:Initializing setup()
2023-05-19 18:49:55,927:INFO:self.USI: b1e2
2023-05-19 18:49:55,927:INFO:self._variable_keys: {'exp_id', 'X', 'data', 'logging_param', '_ml_usecase', 'log_plots_param', 'idx', '_available_plots', 'pipeline', 'fix_imbalance', 'fold_shuffle_param', 'target_param', 'gpu_param', 'memory', 'seed', 'fold_groups_param', 'gpu_n_jobs_param', 'y', 'y_test', 'html_param', 'fold_generator', 'X_test', 'is_multiclass', 'exp_name_log', 'n_jobs_param', 'USI', 'y_train', 'X_train'}
2023-05-19 18:49:55,927:INFO:Checking environment
2023-05-19 18:49:55,927:INFO:python_version: 3.9.16
2023-05-19 18:49:55,927:INFO:python_build: ('main', 'Mar  8 2023 10:39:24')
2023-05-19 18:49:55,927:INFO:machine: AMD64
2023-05-19 18:49:55,928:INFO:platform: Windows-10-10.0.19045-SP0
2023-05-19 18:49:55,928:INFO:Memory: svmem(total=17105637376, available=6320467968, percent=63.1, used=10785169408, free=6320467968)
2023-05-19 18:49:55,928:INFO:Physical Core: 4
2023-05-19 18:49:55,928:INFO:Logical Core: 8
2023-05-19 18:49:55,928:INFO:Checking libraries
2023-05-19 18:49:55,928:INFO:System:
2023-05-19 18:49:55,928:INFO:    python: 3.9.16 (main, Mar  8 2023, 10:39:24) [MSC v.1916 64 bit (AMD64)]
2023-05-19 18:49:55,928:INFO:executable: C:\Users\sann_\anaconda3\envs\myenv\python.exe
2023-05-19 18:49:55,928:INFO:   machine: Windows-10-10.0.19045-SP0
2023-05-19 18:49:55,928:INFO:PyCaret required dependencies:
2023-05-19 18:49:55,928:INFO:                 pip: 23.0.1
2023-05-19 18:49:55,928:INFO:          setuptools: 65.6.3
2023-05-19 18:49:55,928:INFO:             pycaret: 3.0.2
2023-05-19 18:49:55,928:INFO:             IPython: 8.12.0
2023-05-19 18:49:55,928:INFO:          ipywidgets: 8.0.6
2023-05-19 18:49:55,928:INFO:                tqdm: 4.65.0
2023-05-19 18:49:55,928:INFO:               numpy: 1.23.5
2023-05-19 18:49:55,928:INFO:              pandas: 1.5.3
2023-05-19 18:49:55,928:INFO:              jinja2: 3.1.2
2023-05-19 18:49:55,928:INFO:               scipy: 1.10.1
2023-05-19 18:49:55,928:INFO:              joblib: 1.2.0
2023-05-19 18:49:55,928:INFO:             sklearn: 1.2.2
2023-05-19 18:49:55,928:INFO:                pyod: 1.0.9
2023-05-19 18:49:55,928:INFO:            imblearn: 0.10.1
2023-05-19 18:49:55,928:INFO:   category_encoders: 2.6.1
2023-05-19 18:49:55,929:INFO:            lightgbm: 3.3.5
2023-05-19 18:49:55,929:INFO:               numba: 0.57.0
2023-05-19 18:49:55,929:INFO:            requests: 2.28.2
2023-05-19 18:49:55,929:INFO:          matplotlib: 3.7.1
2023-05-19 18:49:55,929:INFO:          scikitplot: 0.3.7
2023-05-19 18:49:55,929:INFO:         yellowbrick: 1.5
2023-05-19 18:49:55,929:INFO:              plotly: 5.14.1
2023-05-19 18:49:55,929:INFO:             kaleido: 0.2.1
2023-05-19 18:49:55,929:INFO:         statsmodels: 0.14.0
2023-05-19 18:49:55,929:INFO:              sktime: 0.17.0
2023-05-19 18:49:55,929:INFO:               tbats: 1.1.3
2023-05-19 18:49:55,929:INFO:            pmdarima: 2.0.3
2023-05-19 18:49:55,929:INFO:              psutil: 5.9.0
2023-05-19 18:49:55,929:INFO:PyCaret optional dependencies:
2023-05-19 18:49:55,940:INFO:                shap: Not installed
2023-05-19 18:49:55,940:INFO:           interpret: Not installed
2023-05-19 18:49:55,940:INFO:                umap: Not installed
2023-05-19 18:49:55,940:INFO:    pandas_profiling: Not installed
2023-05-19 18:49:55,940:INFO:  explainerdashboard: Not installed
2023-05-19 18:49:55,940:INFO:             autoviz: Not installed
2023-05-19 18:49:55,940:INFO:           fairlearn: Not installed
2023-05-19 18:49:55,940:INFO:             xgboost: Not installed
2023-05-19 18:49:55,940:INFO:            catboost: Not installed
2023-05-19 18:49:55,940:INFO:              kmodes: Not installed
2023-05-19 18:49:55,940:INFO:             mlxtend: Not installed
2023-05-19 18:49:55,940:INFO:       statsforecast: Not installed
2023-05-19 18:49:55,940:INFO:        tune_sklearn: Not installed
2023-05-19 18:49:55,940:INFO:                 ray: Not installed
2023-05-19 18:49:55,941:INFO:            hyperopt: Not installed
2023-05-19 18:49:55,941:INFO:              optuna: Not installed
2023-05-19 18:49:55,941:INFO:               skopt: Not installed
2023-05-19 18:49:55,941:INFO:              mlflow: Not installed
2023-05-19 18:49:55,941:INFO:              gradio: Not installed
2023-05-19 18:49:55,941:INFO:             fastapi: Not installed
2023-05-19 18:49:55,941:INFO:             uvicorn: Not installed
2023-05-19 18:49:55,941:INFO:              m2cgen: Not installed
2023-05-19 18:49:55,941:INFO:           evidently: Not installed
2023-05-19 18:49:55,941:INFO:               fugue: Not installed
2023-05-19 18:49:55,941:INFO:           streamlit: 1.20.0
2023-05-19 18:49:55,941:INFO:             prophet: Not installed
2023-05-19 18:49:55,941:INFO:None
2023-05-19 18:49:55,941:INFO:Set up data.
2023-05-19 18:49:55,969:INFO:Set up train/test split.
2023-05-19 18:49:55,983:INFO:Set up index.
2023-05-19 18:49:55,984:INFO:Set up folding strategy.
2023-05-19 18:49:55,984:INFO:Assigning column types.
2023-05-19 18:49:55,987:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-19 18:49:56,026:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-19 18:49:56,028:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-19 18:49:56,057:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 18:49:56,071:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 18:49:56,110:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-19 18:49:56,110:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-19 18:49:56,134:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 18:49:56,134:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 18:49:56,135:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-19 18:49:56,174:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-19 18:49:56,199:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 18:49:56,199:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 18:49:56,240:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-19 18:49:56,264:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 18:49:56,264:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 18:49:56,264:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-05-19 18:49:56,328:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 18:49:56,328:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 18:49:56,390:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 18:49:56,390:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 18:49:56,392:INFO:Preparing preprocessing pipeline...
2023-05-19 18:49:56,393:INFO:Set up simple imputation.
2023-05-19 18:49:56,400:INFO:Set up encoding of ordinal features.
2023-05-19 18:49:56,406:INFO:Set up encoding of categorical features.
2023-05-19 18:49:56,698:INFO:Finished creating preprocessing pipeline.
2023-05-19 18:49:56,728:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\sann_\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['qtd_filhos', 'idade',
                                             'tempo_emprego',
                                             'qt_pessoas_residencia', 'renda'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',...
                                                               verbose=0))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['tipo_renda', 'educacao',
                                             'estado_civil',
                                             'tipo_residencia'],
                                    transformer=OneHotEncoder(cols=['tipo_renda',
                                                                    'educacao',
                                                                    'estado_civil',
                                                                    'tipo_residencia'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2023-05-19 18:49:56,728:INFO:Creating final display dataframe.
2023-05-19 18:49:57,243:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target               mau
2                   Target type            Binary
3           Original data shape       (47500, 13)
4        Transformed data shape       (47500, 30)
5   Transformed train set shape       (33250, 30)
6    Transformed test set shape       (14250, 30)
7              Ordinal features                 3
8              Numeric features                 5
9          Categorical features                 7
10     Rows with missing values             16.8%
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17               Fold Generator   StratifiedKFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              b1e2
2023-05-19 18:49:57,325:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 18:49:57,325:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 18:49:57,394:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 18:49:57,394:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 18:49:57,395:INFO:setup() successfully completed in 1.89s...............
2023-05-19 18:50:26,690:INFO:PyCaret ClassificationExperiment
2023-05-19 18:50:26,690:INFO:Logging name: clf-default-name
2023-05-19 18:50:26,690:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-05-19 18:50:26,690:INFO:version 3.0.2
2023-05-19 18:50:26,690:INFO:Initializing setup()
2023-05-19 18:50:26,690:INFO:self.USI: faf9
2023-05-19 18:50:26,690:INFO:self._variable_keys: {'exp_id', 'X', 'data', 'logging_param', '_ml_usecase', 'log_plots_param', 'idx', '_available_plots', 'pipeline', 'fix_imbalance', 'fold_shuffle_param', 'target_param', 'gpu_param', 'memory', 'seed', 'fold_groups_param', 'gpu_n_jobs_param', 'y', 'y_test', 'html_param', 'fold_generator', 'X_test', 'is_multiclass', 'exp_name_log', 'n_jobs_param', 'USI', 'y_train', 'X_train'}
2023-05-19 18:50:26,690:INFO:Checking environment
2023-05-19 18:50:26,690:INFO:python_version: 3.9.16
2023-05-19 18:50:26,690:INFO:python_build: ('main', 'Mar  8 2023 10:39:24')
2023-05-19 18:50:26,690:INFO:machine: AMD64
2023-05-19 18:50:26,690:INFO:platform: Windows-10-10.0.19045-SP0
2023-05-19 18:50:26,691:INFO:Memory: svmem(total=17105637376, available=6364053504, percent=62.8, used=10741583872, free=6364053504)
2023-05-19 18:50:26,691:INFO:Physical Core: 4
2023-05-19 18:50:26,691:INFO:Logical Core: 8
2023-05-19 18:50:26,691:INFO:Checking libraries
2023-05-19 18:50:26,691:INFO:System:
2023-05-19 18:50:26,691:INFO:    python: 3.9.16 (main, Mar  8 2023, 10:39:24) [MSC v.1916 64 bit (AMD64)]
2023-05-19 18:50:26,691:INFO:executable: C:\Users\sann_\anaconda3\envs\myenv\python.exe
2023-05-19 18:50:26,691:INFO:   machine: Windows-10-10.0.19045-SP0
2023-05-19 18:50:26,691:INFO:PyCaret required dependencies:
2023-05-19 18:50:26,691:INFO:                 pip: 23.0.1
2023-05-19 18:50:26,691:INFO:          setuptools: 65.6.3
2023-05-19 18:50:26,691:INFO:             pycaret: 3.0.2
2023-05-19 18:50:26,691:INFO:             IPython: 8.12.0
2023-05-19 18:50:26,691:INFO:          ipywidgets: 8.0.6
2023-05-19 18:50:26,691:INFO:                tqdm: 4.65.0
2023-05-19 18:50:26,691:INFO:               numpy: 1.23.5
2023-05-19 18:50:26,691:INFO:              pandas: 1.5.3
2023-05-19 18:50:26,691:INFO:              jinja2: 3.1.2
2023-05-19 18:50:26,691:INFO:               scipy: 1.10.1
2023-05-19 18:50:26,691:INFO:              joblib: 1.2.0
2023-05-19 18:50:26,691:INFO:             sklearn: 1.2.2
2023-05-19 18:50:26,691:INFO:                pyod: 1.0.9
2023-05-19 18:50:26,691:INFO:            imblearn: 0.10.1
2023-05-19 18:50:26,691:INFO:   category_encoders: 2.6.1
2023-05-19 18:50:26,692:INFO:            lightgbm: 3.3.5
2023-05-19 18:50:26,692:INFO:               numba: 0.57.0
2023-05-19 18:50:26,692:INFO:            requests: 2.28.2
2023-05-19 18:50:26,692:INFO:          matplotlib: 3.7.1
2023-05-19 18:50:26,692:INFO:          scikitplot: 0.3.7
2023-05-19 18:50:26,692:INFO:         yellowbrick: 1.5
2023-05-19 18:50:26,692:INFO:              plotly: 5.14.1
2023-05-19 18:50:26,692:INFO:             kaleido: 0.2.1
2023-05-19 18:50:26,692:INFO:         statsmodels: 0.14.0
2023-05-19 18:50:26,692:INFO:              sktime: 0.17.0
2023-05-19 18:50:26,692:INFO:               tbats: 1.1.3
2023-05-19 18:50:26,692:INFO:            pmdarima: 2.0.3
2023-05-19 18:50:26,692:INFO:              psutil: 5.9.0
2023-05-19 18:50:26,692:INFO:PyCaret optional dependencies:
2023-05-19 18:50:26,692:INFO:                shap: Not installed
2023-05-19 18:50:26,692:INFO:           interpret: Not installed
2023-05-19 18:50:26,692:INFO:                umap: Not installed
2023-05-19 18:50:26,692:INFO:    pandas_profiling: Not installed
2023-05-19 18:50:26,692:INFO:  explainerdashboard: Not installed
2023-05-19 18:50:26,692:INFO:             autoviz: Not installed
2023-05-19 18:50:26,692:INFO:           fairlearn: Not installed
2023-05-19 18:50:26,692:INFO:             xgboost: Not installed
2023-05-19 18:50:26,692:INFO:            catboost: Not installed
2023-05-19 18:50:26,692:INFO:              kmodes: Not installed
2023-05-19 18:50:26,692:INFO:             mlxtend: Not installed
2023-05-19 18:50:26,692:INFO:       statsforecast: Not installed
2023-05-19 18:50:26,692:INFO:        tune_sklearn: Not installed
2023-05-19 18:50:26,692:INFO:                 ray: Not installed
2023-05-19 18:50:26,693:INFO:            hyperopt: Not installed
2023-05-19 18:50:26,693:INFO:              optuna: Not installed
2023-05-19 18:50:26,693:INFO:               skopt: Not installed
2023-05-19 18:50:26,693:INFO:              mlflow: Not installed
2023-05-19 18:50:26,693:INFO:              gradio: Not installed
2023-05-19 18:50:26,693:INFO:             fastapi: Not installed
2023-05-19 18:50:26,693:INFO:             uvicorn: Not installed
2023-05-19 18:50:26,693:INFO:              m2cgen: Not installed
2023-05-19 18:50:26,693:INFO:           evidently: Not installed
2023-05-19 18:50:26,693:INFO:               fugue: Not installed
2023-05-19 18:50:26,693:INFO:           streamlit: 1.20.0
2023-05-19 18:50:26,693:INFO:             prophet: Not installed
2023-05-19 18:50:26,693:INFO:None
2023-05-19 18:50:26,693:INFO:Set up data.
2023-05-19 18:50:26,719:INFO:Set up train/test split.
2023-05-19 18:50:26,734:INFO:Set up index.
2023-05-19 18:50:26,734:INFO:Set up folding strategy.
2023-05-19 18:50:26,735:INFO:Assigning column types.
2023-05-19 18:50:26,739:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-19 18:50:26,778:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-19 18:50:26,779:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-19 18:50:26,804:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 18:50:26,804:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 18:50:26,844:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-19 18:50:26,845:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-19 18:50:26,870:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 18:50:26,870:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 18:50:26,870:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-19 18:50:26,909:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-19 18:50:26,933:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 18:50:26,933:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 18:50:26,972:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-19 18:50:26,996:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 18:50:26,996:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 18:50:26,997:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-05-19 18:50:27,061:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 18:50:27,061:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 18:50:27,124:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 18:50:27,124:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 18:50:27,125:INFO:Preparing preprocessing pipeline...
2023-05-19 18:50:27,126:INFO:Set up simple imputation.
2023-05-19 18:50:27,133:INFO:Set up encoding of ordinal features.
2023-05-19 18:50:27,138:INFO:Set up encoding of categorical features.
2023-05-19 18:50:27,138:INFO:Set up imbalanced handling.
2023-05-19 18:50:27,500:INFO:Finished creating preprocessing pipeline.
2023-05-19 18:50:27,530:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\sann_\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['qtd_filhos', 'idade',
                                             'tempo_emprego',
                                             'qt_pessoas_residencia', 'renda'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',...
                                                                    'educacao',
                                                                    'estado_civil',
                                                                    'tipo_residencia'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto'))))],
         verbose=False)
2023-05-19 18:50:27,531:INFO:Creating final display dataframe.
2023-05-19 18:50:28,733:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target               mau
2                   Target type            Binary
3           Original data shape       (47500, 13)
4        Transformed data shape       (75530, 30)
5   Transformed train set shape       (61280, 30)
6    Transformed test set shape       (14250, 30)
7              Ordinal features                 3
8              Numeric features                 5
9          Categorical features                 7
10     Rows with missing values             16.8%
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17                Fix imbalance              True
18         Fix imbalance method             SMOTE
19               Fold Generator   StratifiedKFold
20                  Fold Number                10
21                     CPU Jobs                -1
22                      Use GPU             False
23               Log Experiment             False
24              Experiment Name  clf-default-name
25                          USI              faf9
2023-05-19 18:50:28,805:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 18:50:28,805:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 18:50:28,873:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 18:50:28,873:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 18:50:28,873:INFO:setup() successfully completed in 2.51s...............
2023-05-19 18:50:35,576:INFO:gpu_param set to False
2023-05-19 18:50:35,650:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 18:50:35,651:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 18:50:35,716:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 18:50:35,716:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-19 18:50:40,344:INFO:Initializing create_model()
2023-05-19 18:50:40,345:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002E682097D90>, estimator=lightgbm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-19 18:50:40,345:INFO:Checking exceptions
2023-05-19 18:50:40,360:INFO:Importing libraries
2023-05-19 18:50:40,360:INFO:Copying training dataset
2023-05-19 18:50:40,371:INFO:Defining folds
2023-05-19 18:50:40,371:INFO:Declaring metric variables
2023-05-19 18:50:40,373:INFO:Importing untrained model
2023-05-19 18:50:40,377:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-19 18:50:40,385:INFO:Starting cross validation
2023-05-19 18:50:40,388:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 18:50:51,601:INFO:Calculating mean and std
2023-05-19 18:50:51,602:INFO:Creating metrics dataframe
2023-05-19 18:50:51,606:INFO:Finalizing model
2023-05-19 18:50:52,814:INFO:Uploading results into container
2023-05-19 18:50:52,814:INFO:Uploading model into container now
2023-05-19 18:50:52,823:INFO:_master_model_container: 1
2023-05-19 18:50:52,823:INFO:_display_container: 2
2023-05-19 18:50:52,824:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-05-19 18:50:52,824:INFO:create_model() successfully completed......................................
2023-05-19 18:51:45,273:INFO:Initializing tune_model()
2023-05-19 18:51:45,274:INFO:tune_model(estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Recall, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002E682097D90>)
2023-05-19 18:51:45,274:INFO:Checking exceptions
2023-05-19 18:51:45,295:INFO:Copying training dataset
2023-05-19 18:51:45,302:INFO:Checking base model
2023-05-19 18:51:45,302:INFO:Base model : Light Gradient Boosting Machine
2023-05-19 18:51:45,306:INFO:Declaring metric variables
2023-05-19 18:51:45,309:INFO:Defining Hyperparameters
2023-05-19 18:51:45,383:INFO:Tuning with n_jobs=-1
2023-05-19 18:51:45,383:INFO:Initializing RandomizedSearchCV
2023-05-19 18:52:43,565:INFO:best_params: {'actual_estimator__reg_lambda': 0.0005, 'actual_estimator__reg_alpha': 0.2, 'actual_estimator__num_leaves': 2, 'actual_estimator__n_estimators': 30, 'actual_estimator__min_split_gain': 0, 'actual_estimator__min_child_samples': 46, 'actual_estimator__learning_rate': 0.0005, 'actual_estimator__feature_fraction': 1.0, 'actual_estimator__bagging_freq': 3, 'actual_estimator__bagging_fraction': 0.9}
2023-05-19 18:52:43,566:INFO:Hyperparameter search completed
2023-05-19 18:52:43,567:INFO:SubProcess create_model() called ==================================
2023-05-19 18:52:43,567:INFO:Initializing create_model()
2023-05-19 18:52:43,567:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002E682097D90>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002E682100CD0>, model_only=True, return_train_score=False, kwargs={'reg_lambda': 0.0005, 'reg_alpha': 0.2, 'num_leaves': 2, 'n_estimators': 30, 'min_split_gain': 0, 'min_child_samples': 46, 'learning_rate': 0.0005, 'feature_fraction': 1.0, 'bagging_freq': 3, 'bagging_fraction': 0.9})
2023-05-19 18:52:43,567:INFO:Checking exceptions
2023-05-19 18:52:43,568:INFO:Importing libraries
2023-05-19 18:52:43,568:INFO:Copying training dataset
2023-05-19 18:52:43,578:INFO:Defining folds
2023-05-19 18:52:43,578:INFO:Declaring metric variables
2023-05-19 18:52:43,581:INFO:Importing untrained model
2023-05-19 18:52:43,581:INFO:Declaring custom model
2023-05-19 18:52:43,585:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-19 18:52:43,591:INFO:Starting cross validation
2023-05-19 18:52:43,593:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 18:52:48,165:INFO:Calculating mean and std
2023-05-19 18:52:48,166:INFO:Creating metrics dataframe
2023-05-19 18:52:48,171:INFO:Finalizing model
2023-05-19 18:52:49,162:INFO:Uploading results into container
2023-05-19 18:52:49,163:INFO:Uploading model into container now
2023-05-19 18:52:49,163:INFO:_master_model_container: 2
2023-05-19 18:52:49,163:INFO:_display_container: 3
2023-05-19 18:52:49,164:INFO:LGBMClassifier(bagging_fraction=0.9, bagging_freq=3, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=1.0,
               importance_type='split', learning_rate=0.0005, max_depth=-1,
               min_child_samples=46, min_child_weight=0.001, min_split_gain=0,
               n_estimators=30, n_jobs=-1, num_leaves=2, objective=None,
               random_state=123, reg_alpha=0.2, reg_lambda=0.0005,
               silent='warn', subsample=1.0, subsample_for_bin=200000,
               subsample_freq=0)
2023-05-19 18:52:49,164:INFO:create_model() successfully completed......................................
2023-05-19 18:52:49,236:INFO:SubProcess create_model() end ==================================
2023-05-19 18:52:49,236:INFO:choose_better activated
2023-05-19 18:52:49,239:INFO:SubProcess create_model() called ==================================
2023-05-19 18:52:49,239:INFO:Initializing create_model()
2023-05-19 18:52:49,239:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002E682097D90>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-19 18:52:49,239:INFO:Checking exceptions
2023-05-19 18:52:49,240:INFO:Importing libraries
2023-05-19 18:52:49,241:INFO:Copying training dataset
2023-05-19 18:52:49,250:INFO:Defining folds
2023-05-19 18:52:49,250:INFO:Declaring metric variables
2023-05-19 18:52:49,250:INFO:Importing untrained model
2023-05-19 18:52:49,250:INFO:Declaring custom model
2023-05-19 18:52:49,251:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-19 18:52:49,252:INFO:Starting cross validation
2023-05-19 18:52:49,254:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 18:52:53,947:INFO:Calculating mean and std
2023-05-19 18:52:53,948:INFO:Creating metrics dataframe
2023-05-19 18:52:53,950:INFO:Finalizing model
2023-05-19 18:52:54,906:INFO:Uploading results into container
2023-05-19 18:52:54,907:INFO:Uploading model into container now
2023-05-19 18:52:54,907:INFO:_master_model_container: 3
2023-05-19 18:52:54,907:INFO:_display_container: 4
2023-05-19 18:52:54,908:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-05-19 18:52:54,908:INFO:create_model() successfully completed......................................
2023-05-19 18:52:54,980:INFO:SubProcess create_model() end ==================================
2023-05-19 18:52:54,980:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0) result for Recall is 0.0441
2023-05-19 18:52:54,981:INFO:LGBMClassifier(bagging_fraction=0.9, bagging_freq=3, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=1.0,
               importance_type='split', learning_rate=0.0005, max_depth=-1,
               min_child_samples=46, min_child_weight=0.001, min_split_gain=0,
               n_estimators=30, n_jobs=-1, num_leaves=2, objective=None,
               random_state=123, reg_alpha=0.2, reg_lambda=0.0005,
               silent='warn', subsample=1.0, subsample_for_bin=200000,
               subsample_freq=0) result for Recall is 0.7655
2023-05-19 18:52:54,981:INFO:LGBMClassifier(bagging_fraction=0.9, bagging_freq=3, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=1.0,
               importance_type='split', learning_rate=0.0005, max_depth=-1,
               min_child_samples=46, min_child_weight=0.001, min_split_gain=0,
               n_estimators=30, n_jobs=-1, num_leaves=2, objective=None,
               random_state=123, reg_alpha=0.2, reg_lambda=0.0005,
               silent='warn', subsample=1.0, subsample_for_bin=200000,
               subsample_freq=0) is best model
2023-05-19 18:52:54,981:INFO:choose_better completed
2023-05-19 18:52:54,990:INFO:_master_model_container: 3
2023-05-19 18:52:54,990:INFO:_display_container: 3
2023-05-19 18:52:54,991:INFO:LGBMClassifier(bagging_fraction=0.9, bagging_freq=3, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=1.0,
               importance_type='split', learning_rate=0.0005, max_depth=-1,
               min_child_samples=46, min_child_weight=0.001, min_split_gain=0,
               n_estimators=30, n_jobs=-1, num_leaves=2, objective=None,
               random_state=123, reg_alpha=0.2, reg_lambda=0.0005,
               silent='warn', subsample=1.0, subsample_for_bin=200000,
               subsample_freq=0)
2023-05-19 18:52:54,991:INFO:tune_model() successfully completed......................................
2023-05-19 18:53:05,209:INFO:Initializing plot_model()
2023-05-19 18:53:05,210:INFO:plot_model(plot=auc, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LGBMClassifier(bagging_fraction=0.9, bagging_freq=3, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=1.0,
               importance_type='split', learning_rate=0.0005, max_depth=-1,
               min_child_samples=46, min_child_weight=0.001, min_split_gain=0,
               n_estimators=30, n_jobs=-1, num_leaves=2, objective=None,
               random_state=123, reg_alpha=0.2, reg_lambda=0.0005,
               silent='warn', subsample=1.0, subsample_for_bin=200000,
               subsample_freq=0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002E682097D90>, system=True)
2023-05-19 18:53:05,210:INFO:Checking exceptions
2023-05-19 18:53:05,216:INFO:Preloading libraries
2023-05-19 18:53:05,218:INFO:Copying training dataset
2023-05-19 18:53:05,218:INFO:Plot type: auc
2023-05-19 18:53:05,390:INFO:Fitting Model
2023-05-19 18:53:05,392:INFO:Scoring test/hold-out set
2023-05-19 18:53:05,625:INFO:Visual Rendered Successfully
2023-05-19 18:53:05,705:INFO:plot_model() successfully completed......................................
2023-05-19 18:53:13,735:INFO:Initializing plot_model()
2023-05-19 18:53:13,735:INFO:plot_model(plot=pr, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LGBMClassifier(bagging_fraction=0.9, bagging_freq=3, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=1.0,
               importance_type='split', learning_rate=0.0005, max_depth=-1,
               min_child_samples=46, min_child_weight=0.001, min_split_gain=0,
               n_estimators=30, n_jobs=-1, num_leaves=2, objective=None,
               random_state=123, reg_alpha=0.2, reg_lambda=0.0005,
               silent='warn', subsample=1.0, subsample_for_bin=200000,
               subsample_freq=0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002E682097D90>, system=True)
2023-05-19 18:53:13,735:INFO:Checking exceptions
2023-05-19 18:53:13,744:INFO:Preloading libraries
2023-05-19 18:53:13,745:INFO:Copying training dataset
2023-05-19 18:53:13,745:INFO:Plot type: pr
2023-05-19 18:53:13,895:INFO:Fitting Model
2023-05-19 18:53:13,897:INFO:Scoring test/hold-out set
2023-05-19 18:53:14,090:INFO:Visual Rendered Successfully
2023-05-19 18:53:14,160:INFO:plot_model() successfully completed......................................
2023-05-19 18:53:16,335:INFO:Initializing plot_model()
2023-05-19 18:53:16,336:INFO:plot_model(plot=feature, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LGBMClassifier(bagging_fraction=0.9, bagging_freq=3, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=1.0,
               importance_type='split', learning_rate=0.0005, max_depth=-1,
               min_child_samples=46, min_child_weight=0.001, min_split_gain=0,
               n_estimators=30, n_jobs=-1, num_leaves=2, objective=None,
               random_state=123, reg_alpha=0.2, reg_lambda=0.0005,
               silent='warn', subsample=1.0, subsample_for_bin=200000,
               subsample_freq=0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002E682097D90>, system=True)
2023-05-19 18:53:16,336:INFO:Checking exceptions
2023-05-19 18:53:16,342:INFO:Preloading libraries
2023-05-19 18:53:16,343:INFO:Copying training dataset
2023-05-19 18:53:16,344:INFO:Plot type: feature
2023-05-19 18:53:16,344:WARNING:No coef_ found. Trying feature_importances_
2023-05-19 18:53:16,551:INFO:Visual Rendered Successfully
2023-05-19 18:53:16,626:INFO:plot_model() successfully completed......................................
2023-05-19 18:53:18,967:INFO:Initializing plot_model()
2023-05-19 18:53:18,967:INFO:plot_model(plot=confusion_matrix, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LGBMClassifier(bagging_fraction=0.9, bagging_freq=3, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=1.0,
               importance_type='split', learning_rate=0.0005, max_depth=-1,
               min_child_samples=46, min_child_weight=0.001, min_split_gain=0,
               n_estimators=30, n_jobs=-1, num_leaves=2, objective=None,
               random_state=123, reg_alpha=0.2, reg_lambda=0.0005,
               silent='warn', subsample=1.0, subsample_for_bin=200000,
               subsample_freq=0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002E682097D90>, system=True)
2023-05-19 18:53:18,967:INFO:Checking exceptions
2023-05-19 18:53:18,973:INFO:Preloading libraries
2023-05-19 18:53:18,975:INFO:Copying training dataset
2023-05-19 18:53:18,975:INFO:Plot type: confusion_matrix
2023-05-19 18:53:19,126:INFO:Fitting Model
2023-05-19 18:53:19,126:INFO:Scoring test/hold-out set
2023-05-19 18:53:19,263:INFO:Visual Rendered Successfully
2023-05-19 18:53:19,333:INFO:plot_model() successfully completed......................................
2023-05-19 18:53:33,610:INFO:Initializing tune_model()
2023-05-19 18:53:33,611:INFO:tune_model(estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=None, round=4, n_iter=10, custom_grid=None, optimize=AUC, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002E682097D90>)
2023-05-19 18:53:33,611:INFO:Checking exceptions
2023-05-19 18:53:33,629:INFO:Copying training dataset
2023-05-19 18:53:33,636:INFO:Checking base model
2023-05-19 18:53:33,637:INFO:Base model : Light Gradient Boosting Machine
2023-05-19 18:53:33,641:INFO:Declaring metric variables
2023-05-19 18:53:33,645:INFO:Defining Hyperparameters
2023-05-19 18:53:33,718:INFO:Tuning with n_jobs=-1
2023-05-19 18:53:33,718:INFO:Initializing RandomizedSearchCV
2023-05-19 18:54:20,712:INFO:best_params: {'actual_estimator__reg_lambda': 0.1, 'actual_estimator__reg_alpha': 0.0001, 'actual_estimator__num_leaves': 10, 'actual_estimator__n_estimators': 180, 'actual_estimator__min_split_gain': 0.7, 'actual_estimator__min_child_samples': 96, 'actual_estimator__learning_rate': 0.05, 'actual_estimator__feature_fraction': 0.9, 'actual_estimator__bagging_freq': 4, 'actual_estimator__bagging_fraction': 0.6}
2023-05-19 18:54:20,713:INFO:Hyperparameter search completed
2023-05-19 18:54:20,713:INFO:SubProcess create_model() called ==================================
2023-05-19 18:54:20,713:INFO:Initializing create_model()
2023-05-19 18:54:20,714:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002E682097D90>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002E6828B02B0>, model_only=True, return_train_score=False, kwargs={'reg_lambda': 0.1, 'reg_alpha': 0.0001, 'num_leaves': 10, 'n_estimators': 180, 'min_split_gain': 0.7, 'min_child_samples': 96, 'learning_rate': 0.05, 'feature_fraction': 0.9, 'bagging_freq': 4, 'bagging_fraction': 0.6})
2023-05-19 18:54:20,714:INFO:Checking exceptions
2023-05-19 18:54:20,714:INFO:Importing libraries
2023-05-19 18:54:20,714:INFO:Copying training dataset
2023-05-19 18:54:20,724:INFO:Defining folds
2023-05-19 18:54:20,724:INFO:Declaring metric variables
2023-05-19 18:54:20,728:INFO:Importing untrained model
2023-05-19 18:54:20,728:INFO:Declaring custom model
2023-05-19 18:54:20,731:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-19 18:54:20,738:INFO:Starting cross validation
2023-05-19 18:54:20,740:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 18:54:25,346:INFO:Calculating mean and std
2023-05-19 18:54:25,347:INFO:Creating metrics dataframe
2023-05-19 18:54:25,352:INFO:Finalizing model
2023-05-19 18:54:25,672:INFO:[LightGBM] [Warning] feature_fraction is set=0.9, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.9
2023-05-19 18:54:25,673:INFO:[LightGBM] [Warning] bagging_fraction is set=0.6, subsample=1.0 will be ignored. Current value: bagging_fraction=0.6
2023-05-19 18:54:25,673:INFO:[LightGBM] [Warning] bagging_freq is set=4, subsample_freq=0 will be ignored. Current value: bagging_freq=4
2023-05-19 18:54:26,609:INFO:Uploading results into container
2023-05-19 18:54:26,610:INFO:Uploading model into container now
2023-05-19 18:54:26,610:INFO:_master_model_container: 4
2023-05-19 18:54:26,610:INFO:_display_container: 4
2023-05-19 18:54:26,611:INFO:LGBMClassifier(bagging_fraction=0.6, bagging_freq=4, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.9,
               importance_type='split', learning_rate=0.05, max_depth=-1,
               min_child_samples=96, min_child_weight=0.001, min_split_gain=0.7,
               n_estimators=180, n_jobs=-1, num_leaves=10, objective=None,
               random_state=123, reg_alpha=0.0001, reg_lambda=0.1,
               silent='warn', subsample=1.0, subsample_for_bin=200000,
               subsample_freq=0)
2023-05-19 18:54:26,611:INFO:create_model() successfully completed......................................
2023-05-19 18:54:26,684:INFO:SubProcess create_model() end ==================================
2023-05-19 18:54:26,684:INFO:choose_better activated
2023-05-19 18:54:26,687:INFO:SubProcess create_model() called ==================================
2023-05-19 18:54:26,687:INFO:Initializing create_model()
2023-05-19 18:54:26,687:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002E682097D90>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-19 18:54:26,687:INFO:Checking exceptions
2023-05-19 18:54:26,688:INFO:Importing libraries
2023-05-19 18:54:26,689:INFO:Copying training dataset
2023-05-19 18:54:26,700:INFO:Defining folds
2023-05-19 18:54:26,701:INFO:Declaring metric variables
2023-05-19 18:54:26,701:INFO:Importing untrained model
2023-05-19 18:54:26,701:INFO:Declaring custom model
2023-05-19 18:54:26,702:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-19 18:54:26,702:INFO:Starting cross validation
2023-05-19 18:54:26,704:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-19 18:54:31,148:INFO:Calculating mean and std
2023-05-19 18:54:31,148:INFO:Creating metrics dataframe
2023-05-19 18:54:31,150:INFO:Finalizing model
2023-05-19 18:54:31,962:INFO:Uploading results into container
2023-05-19 18:54:31,963:INFO:Uploading model into container now
2023-05-19 18:54:31,963:INFO:_master_model_container: 5
2023-05-19 18:54:31,963:INFO:_display_container: 5
2023-05-19 18:54:31,964:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-05-19 18:54:31,964:INFO:create_model() successfully completed......................................
2023-05-19 18:54:32,038:INFO:SubProcess create_model() end ==================================
2023-05-19 18:54:32,038:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0) result for AUC is 0.778
2023-05-19 18:54:32,039:INFO:LGBMClassifier(bagging_fraction=0.6, bagging_freq=4, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.9,
               importance_type='split', learning_rate=0.05, max_depth=-1,
               min_child_samples=96, min_child_weight=0.001, min_split_gain=0.7,
               n_estimators=180, n_jobs=-1, num_leaves=10, objective=None,
               random_state=123, reg_alpha=0.0001, reg_lambda=0.1,
               silent='warn', subsample=1.0, subsample_for_bin=200000,
               subsample_freq=0) result for AUC is 0.7813
2023-05-19 18:54:32,039:INFO:LGBMClassifier(bagging_fraction=0.6, bagging_freq=4, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.9,
               importance_type='split', learning_rate=0.05, max_depth=-1,
               min_child_samples=96, min_child_weight=0.001, min_split_gain=0.7,
               n_estimators=180, n_jobs=-1, num_leaves=10, objective=None,
               random_state=123, reg_alpha=0.0001, reg_lambda=0.1,
               silent='warn', subsample=1.0, subsample_for_bin=200000,
               subsample_freq=0) is best model
2023-05-19 18:54:32,039:INFO:choose_better completed
2023-05-19 18:54:32,048:INFO:_master_model_container: 5
2023-05-19 18:54:32,048:INFO:_display_container: 4
2023-05-19 18:54:32,049:INFO:LGBMClassifier(bagging_fraction=0.6, bagging_freq=4, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.9,
               importance_type='split', learning_rate=0.05, max_depth=-1,
               min_child_samples=96, min_child_weight=0.001, min_split_gain=0.7,
               n_estimators=180, n_jobs=-1, num_leaves=10, objective=None,
               random_state=123, reg_alpha=0.0001, reg_lambda=0.1,
               silent='warn', subsample=1.0, subsample_for_bin=200000,
               subsample_freq=0)
2023-05-19 18:54:32,049:INFO:tune_model() successfully completed......................................
2023-05-19 18:54:39,783:INFO:Initializing plot_model()
2023-05-19 18:54:39,783:INFO:plot_model(plot=auc, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LGBMClassifier(bagging_fraction=0.6, bagging_freq=4, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.9,
               importance_type='split', learning_rate=0.05, max_depth=-1,
               min_child_samples=96, min_child_weight=0.001, min_split_gain=0.7,
               n_estimators=180, n_jobs=-1, num_leaves=10, objective=None,
               random_state=123, reg_alpha=0.0001, reg_lambda=0.1,
               silent='warn', subsample=1.0, subsample_for_bin=200000,
               subsample_freq=0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002E682097D90>, system=True)
2023-05-19 18:54:39,783:INFO:Checking exceptions
2023-05-19 18:54:39,791:INFO:Preloading libraries
2023-05-19 18:54:39,798:INFO:Copying training dataset
2023-05-19 18:54:39,799:INFO:Plot type: auc
2023-05-19 18:54:39,946:INFO:Fitting Model
2023-05-19 18:54:39,948:INFO:Scoring test/hold-out set
2023-05-19 18:54:40,204:INFO:Visual Rendered Successfully
2023-05-19 18:54:40,277:INFO:plot_model() successfully completed......................................
2023-05-19 18:54:43,808:INFO:Initializing plot_model()
2023-05-19 18:54:43,808:INFO:plot_model(plot=pr, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LGBMClassifier(bagging_fraction=0.6, bagging_freq=4, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.9,
               importance_type='split', learning_rate=0.05, max_depth=-1,
               min_child_samples=96, min_child_weight=0.001, min_split_gain=0.7,
               n_estimators=180, n_jobs=-1, num_leaves=10, objective=None,
               random_state=123, reg_alpha=0.0001, reg_lambda=0.1,
               silent='warn', subsample=1.0, subsample_for_bin=200000,
               subsample_freq=0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002E682097D90>, system=True)
2023-05-19 18:54:43,808:INFO:Checking exceptions
2023-05-19 18:54:43,816:INFO:Preloading libraries
2023-05-19 18:54:43,823:INFO:Copying training dataset
2023-05-19 18:54:43,823:INFO:Plot type: pr
2023-05-19 18:54:43,993:INFO:Fitting Model
2023-05-19 18:54:43,995:INFO:Scoring test/hold-out set
2023-05-19 18:54:44,227:INFO:Visual Rendered Successfully
2023-05-19 18:54:44,298:INFO:plot_model() successfully completed......................................
2023-05-19 18:54:49,519:INFO:Initializing plot_model()
2023-05-19 18:54:49,519:INFO:plot_model(plot=feature, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LGBMClassifier(bagging_fraction=0.6, bagging_freq=4, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.9,
               importance_type='split', learning_rate=0.05, max_depth=-1,
               min_child_samples=96, min_child_weight=0.001, min_split_gain=0.7,
               n_estimators=180, n_jobs=-1, num_leaves=10, objective=None,
               random_state=123, reg_alpha=0.0001, reg_lambda=0.1,
               silent='warn', subsample=1.0, subsample_for_bin=200000,
               subsample_freq=0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002E682097D90>, system=True)
2023-05-19 18:54:49,519:INFO:Checking exceptions
2023-05-19 18:54:49,527:INFO:Preloading libraries
2023-05-19 18:54:49,533:INFO:Copying training dataset
2023-05-19 18:54:49,534:INFO:Plot type: feature
2023-05-19 18:54:49,534:WARNING:No coef_ found. Trying feature_importances_
2023-05-19 18:54:49,740:INFO:Visual Rendered Successfully
2023-05-19 18:54:49,812:INFO:plot_model() successfully completed......................................
2023-05-19 18:54:53,032:INFO:Initializing plot_model()
2023-05-19 18:54:53,032:INFO:plot_model(plot=confusion_matrix, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LGBMClassifier(bagging_fraction=0.6, bagging_freq=4, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.9,
               importance_type='split', learning_rate=0.05, max_depth=-1,
               min_child_samples=96, min_child_weight=0.001, min_split_gain=0.7,
               n_estimators=180, n_jobs=-1, num_leaves=10, objective=None,
               random_state=123, reg_alpha=0.0001, reg_lambda=0.1,
               silent='warn', subsample=1.0, subsample_for_bin=200000,
               subsample_freq=0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002E682097D90>, system=True)
2023-05-19 18:54:53,032:INFO:Checking exceptions
2023-05-19 18:54:53,038:INFO:Preloading libraries
2023-05-19 18:54:53,044:INFO:Copying training dataset
2023-05-19 18:54:53,044:INFO:Plot type: confusion_matrix
2023-05-19 18:54:53,193:INFO:Fitting Model
2023-05-19 18:54:53,194:INFO:Scoring test/hold-out set
2023-05-19 18:54:53,364:INFO:Visual Rendered Successfully
2023-05-19 18:54:53,434:INFO:plot_model() successfully completed......................................
2023-05-19 18:55:57,423:INFO:Initializing predict_model()
2023-05-19 18:55:57,424:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002E682097D90>, estimator=LGBMClassifier(bagging_fraction=0.6, bagging_freq=4, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.9,
               importance_type='split', learning_rate=0.05, max_depth=-1,
               min_child_samples=96, min_child_weight=0.001, min_split_gain=0.7,
               n_estimators=180, n_jobs=-1, num_leaves=10, objective=None,
               random_state=123, reg_alpha=0.0001, reg_lambda=0.1,
               silent='warn', subsample=1.0, subsample_for_bin=200000,
               subsample_freq=0), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002E68230F1F0>)
2023-05-19 18:55:57,424:INFO:Checking exceptions
2023-05-19 18:55:57,424:INFO:Preloading libraries
2023-05-19 18:55:57,638:WARNING:C:\Users\sann_\anaconda3\envs\myenv\lib\site-packages\pandas\core\internals\construction.py:568: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  values = np.array([convert(v) for v in values])

2023-05-19 18:56:00,534:INFO:Initializing finalize_model()
2023-05-19 18:56:00,534:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002E682097D90>, estimator=LGBMClassifier(bagging_fraction=0.6, bagging_freq=4, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.9,
               importance_type='split', learning_rate=0.05, max_depth=-1,
               min_child_samples=96, min_child_weight=0.001, min_split_gain=0.7,
               n_estimators=180, n_jobs=-1, num_leaves=10, objective=None,
               random_state=123, reg_alpha=0.0001, reg_lambda=0.1,
               silent='warn', subsample=1.0, subsample_for_bin=200000,
               subsample_freq=0), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-05-19 18:56:00,535:INFO:Finalizing LGBMClassifier(bagging_fraction=0.6, bagging_freq=4, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.9,
               importance_type='split', learning_rate=0.05, max_depth=-1,
               min_child_samples=96, min_child_weight=0.001, min_split_gain=0.7,
               n_estimators=180, n_jobs=-1, num_leaves=10, objective=None,
               random_state=123, reg_alpha=0.0001, reg_lambda=0.1,
               silent='warn', subsample=1.0, subsample_for_bin=200000,
               subsample_freq=0)
2023-05-19 18:56:00,539:INFO:Initializing create_model()
2023-05-19 18:56:00,539:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002E682097D90>, estimator=LGBMClassifier(bagging_fraction=0.6, bagging_freq=4, boosting_type='gbdt',
               class_weight=None, colsample_bytree=1.0, feature_fraction=0.9,
               importance_type='split', learning_rate=0.05, max_depth=-1,
               min_child_samples=96, min_child_weight=0.001, min_split_gain=0.7,
               n_estimators=180, n_jobs=-1, num_leaves=10, objective=None,
               random_state=123, reg_alpha=0.0001, reg_lambda=0.1,
               silent='warn', subsample=1.0, subsample_for_bin=200000,
               subsample_freq=0), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-05-19 18:56:00,539:INFO:Checking exceptions
2023-05-19 18:56:00,541:INFO:Importing libraries
2023-05-19 18:56:00,541:INFO:Copying training dataset
2023-05-19 18:56:00,541:INFO:Defining folds
2023-05-19 18:56:00,541:INFO:Declaring metric variables
2023-05-19 18:56:00,542:INFO:Importing untrained model
2023-05-19 18:56:00,542:INFO:Declaring custom model
2023-05-19 18:56:00,543:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-19 18:56:00,545:INFO:Cross validation set to False
2023-05-19 18:56:00,545:INFO:Fitting Model
2023-05-19 18:56:01,319:INFO:[LightGBM] [Warning] feature_fraction is set=0.9, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.9
2023-05-19 18:56:01,320:INFO:[LightGBM] [Warning] bagging_fraction is set=0.6, subsample=1.0 will be ignored. Current value: bagging_fraction=0.6
2023-05-19 18:56:01,320:INFO:[LightGBM] [Warning] bagging_freq is set=4, subsample_freq=0 will be ignored. Current value: bagging_freq=4
2023-05-19 18:56:01,955:INFO:Pipeline(memory=FastMemory(location=C:\Users\sann_\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['qtd_filhos', 'idade',
                                             'tempo_emprego',
                                             'qt_pessoas_residencia', 'renda'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',...
                                colsample_bytree=1.0, feature_fraction=0.9,
                                importance_type='split', learning_rate=0.05,
                                max_depth=-1, min_child_samples=96,
                                min_child_weight=0.001, min_split_gain=0.7,
                                n_estimators=180, n_jobs=-1, num_leaves=10,
                                objective=None, random_state=123,
                                reg_alpha=0.0001, reg_lambda=0.1, silent='warn',
                                subsample=1.0, subsample_for_bin=200000,
                                subsample_freq=0))],
         verbose=False)
2023-05-19 18:56:01,955:INFO:create_model() successfully completed......................................
2023-05-19 18:56:02,036:INFO:_master_model_container: 5
2023-05-19 18:56:02,036:INFO:_display_container: 5
2023-05-19 18:56:02,068:INFO:Pipeline(memory=FastMemory(location=C:\Users\sann_\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['qtd_filhos', 'idade',
                                             'tempo_emprego',
                                             'qt_pessoas_residencia', 'renda'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',...
                                colsample_bytree=1.0, feature_fraction=0.9,
                                importance_type='split', learning_rate=0.05,
                                max_depth=-1, min_child_samples=96,
                                min_child_weight=0.001, min_split_gain=0.7,
                                n_estimators=180, n_jobs=-1, num_leaves=10,
                                objective=None, random_state=123,
                                reg_alpha=0.0001, reg_lambda=0.1, silent='warn',
                                subsample=1.0, subsample_for_bin=200000,
                                subsample_freq=0))],
         verbose=False)
2023-05-19 18:56:02,068:INFO:finalize_model() successfully completed......................................
2023-05-19 18:56:06,480:INFO:Initializing save_model()
2023-05-19 18:56:06,480:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\sann_\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['qtd_filhos', 'idade',
                                             'tempo_emprego',
                                             'qt_pessoas_residencia', 'renda'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',...
                                colsample_bytree=1.0, feature_fraction=0.9,
                                importance_type='split', learning_rate=0.05,
                                max_depth=-1, min_child_samples=96,
                                min_child_weight=0.001, min_split_gain=0.7,
                                n_estimators=180, n_jobs=-1, num_leaves=10,
                                objective=None, random_state=123,
                                reg_alpha=0.0001, reg_lambda=0.1, silent='warn',
                                subsample=1.0, subsample_for_bin=200000,
                                subsample_freq=0))],
         verbose=False), model_name=Final LGBM Model 19mai2023, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\sann_\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['qtd_filhos', 'idade',
                                             'tempo_emprego',
                                             'qt_pessoas_residencia', 'renda'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',...
                                                                    'educacao',
                                                                    'estado_civil',
                                                                    'tipo_residencia'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('balance',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=FixImbalancer(estimator=SMOTE(k_neighbors=5,
                                                                              n_jobs=None,
                                                                              random_state=None,
                                                                              sampling_strategy='auto'))))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-05-19 18:56:06,480:INFO:Adding model into prep_pipe
2023-05-19 18:56:06,481:WARNING:Only Model saved as it was a pipeline.
2023-05-19 18:56:06,495:INFO:Final LGBM Model 19mai2023.pkl saved in current working directory
2023-05-19 18:56:06,541:INFO:Pipeline(memory=FastMemory(location=C:\Users\sann_\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['qtd_filhos', 'idade',
                                             'tempo_emprego',
                                             'qt_pessoas_residencia', 'renda'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',...
                                colsample_bytree=1.0, feature_fraction=0.9,
                                importance_type='split', learning_rate=0.05,
                                max_depth=-1, min_child_samples=96,
                                min_child_weight=0.001, min_split_gain=0.7,
                                n_estimators=180, n_jobs=-1, num_leaves=10,
                                objective=None, random_state=123,
                                reg_alpha=0.0001, reg_lambda=0.1, silent='warn',
                                subsample=1.0, subsample_for_bin=200000,
                                subsample_freq=0))],
         verbose=False)
2023-05-19 18:56:06,542:INFO:save_model() successfully completed......................................
